// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mined.Data;

#nullable disable

namespace Mined.Migrations
{
    [DbContext(typeof(MinedDbContext))]
    partial class MinedDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Mined.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<string>("MainCategoryNatoEng")
                        .HasColumnType("longtext");

                    b.Property<string>("MainCategoryNatoNl")
                        .HasColumnType("longtext");

                    b.Property<string>("MainCategoryUsEng")
                        .HasColumnType("longtext");

                    b.Property<string>("MainCategoryUsNl")
                        .HasColumnType("longtext");

                    b.Property<string>("SubCategoryNatoEng")
                        .HasColumnType("longtext");

                    b.Property<string>("SubCategoryNatoNl")
                        .HasColumnType("longtext");

                    b.Property<string>("SubCategoryUsEng")
                        .HasColumnType("longtext");

                    b.Property<string>("SubCategoryUsNl")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Mined.Domain.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UxoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UxoImage")
                        .HasColumnType("longblob");

                    b.Property<string>("UxoName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UxoId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Mined.Domain.Password", b =>
                {
                    b.Property<int>("PasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UserPassword")
                        .HasColumnType("longtext");

                    b.HasKey("PasswordId");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("Mined.Domain.Payload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AbbreviationNato")
                        .HasColumnType("longtext");

                    b.Property<string>("AbbreviationRussian")
                        .HasColumnType("longtext");

                    b.Property<string>("ChemicalPayload")
                        .HasColumnType("longtext");

                    b.Property<string>("PayloadTypeEng")
                        .HasColumnType("longtext");

                    b.Property<string>("PayloadTypeNl")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Payloads");
                });

            modelBuilder.Entity("Mined.Domain.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumberOfMistakes")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerScore")
                        .HasColumnType("int");

                    b.Property<string>("UxoMistakes")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("Mined.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PasswordId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PasswordId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Mined.Domain.Uxo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext");

                    b.Property<string>("Dod_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("NameNato")
                        .HasColumnType("longtext");

                    b.Property<string>("NameOrigin")
                        .HasColumnType("longtext");

                    b.Property<string>("NameRussian")
                        .HasColumnType("longtext");

                    b.Property<string>("Nato_Code")
                        .HasColumnType("longtext");

                    b.Property<string>("NickName")
                        .HasColumnType("longtext");

                    b.Property<string>("UxoName")
                        .HasColumnType("longtext");

                    b.Property<string>("description_Eng")
                        .HasColumnType("longtext");

                    b.Property<string>("description_Nl")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Uxos");
                });

            modelBuilder.Entity("Mined.Domain.UxoPayload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("PayloadId")
                        .HasColumnType("int");

                    b.Property<int>("UxoId")
                        .HasColumnType("int");

                    b.Property<int?>("UxoName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PayloadId");

                    b.HasIndex("UxoId");

                    b.ToTable("UxoPayloads");
                });

            modelBuilder.Entity("Mined.Domain.Image", b =>
                {
                    b.HasOne("Mined.Domain.Uxo", "Uxo")
                        .WithMany()
                        .HasForeignKey("UxoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uxo");
                });

            modelBuilder.Entity("Mined.Domain.User", b =>
                {
                    b.HasOne("Mined.Domain.Password", "Password")
                        .WithMany()
                        .HasForeignKey("PasswordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Password");
                });

            modelBuilder.Entity("Mined.Domain.Uxo", b =>
                {
                    b.HasOne("Mined.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Mined.Domain.UxoPayload", b =>
                {
                    b.HasOne("Mined.Domain.Payload", "Payload")
                        .WithMany()
                        .HasForeignKey("PayloadId");

                    b.HasOne("Mined.Domain.Uxo", "Uxo")
                        .WithMany()
                        .HasForeignKey("UxoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payload");

                    b.Navigation("Uxo");
                });
#pragma warning restore 612, 618
        }
    }
}
